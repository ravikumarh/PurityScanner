@model Admin.Models.clsAttributeMaster
@{

    HtmlHelper.ClientValidationEnabled = false;
}
@using (Html.BeginForm("updateAttribute", "AttributeMaster", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            <div class="col-md-12">
                @Html.HiddenFor(model => model.AttributeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.AttributeName, new { @class = "form-control", id = "editAttributeName", @onfocusout = " editvalidData()" })
                @Html.ValidationMessageFor(model => model.AttributeName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttributeImageUrl, new { @class = "control-label col-md-4" })
            <div class="col-md-8">

                <img id="editimg" src=@Model.AttributeImageUrl alt="Select Image" width="100px" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4">
            </div>
            <div class="col-md-8">
                <input type="file" name="edituploadFile" id="editfile" class="form-control" onchange="readURLEdit(this);" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-8 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="return editvalidData();" />
                <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
            </div>
        </div>
    </div>
}

<script type="text/jscript">

    function readURLEdit(input) {
      
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#editimg').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
        else {
            $('#editimg').removeAttr('src');
        }
        editvalidData();
    }
</script>


<script type="text/jscript">


    function editvalidData() {

        var attriName = $('#editAttributeName').val().trim();
        var attriImageUrl = $('#editfile').val();


        if (attriName) {
            $('#editAttributeName').css('border-color', '');
        }
        else {
            $('#editAttributeName').css('border-color', 'red');
        }

        if (attriImageUrl) {
            $('#editfile').css('border-color', '');
        }
        else {
            $('#editfile').css('border-color', 'red');
        }



        if (attriName && attriImageUrl) {
            return true;
        }
        else {
            return false;
        }

        return false;
    }
</script>

