@model Admin.Models.clsCountryMaster
@{

    HtmlHelper.ClientValidationEnabled = false;
}
@using (Html.BeginForm("updateCountry", "CountryMaster", FormMethod.Post))
{
    @Html.AntiForgeryToken()
          
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.CountryCode, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.CountryCode, new { @class = "form-control", id = "editCountryCode", @onfocusout = "editvalidData()" })
                @Html.ValidationMessageFor(model => model.CountryCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.CountryName, new { @class = "form-control", id = "editCountryName", @onfocusout = "editvalidData()" })
                @Html.ValidationMessageFor(model => model.CountryName)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.LanguageName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LanguageName)
                @Html.ValidationMessageFor(model => model.LanguageName)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.LanguageName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.LanguageId, new SelectList(ViewBag.lngList, "Value", "Text"), "Select Default Language", new { @class = "form-control", id = "editLanguageID", @onchange = "editvalidData()" })
                @Html.ValidationMessageFor(model => model.LanguageId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondaryLanguageName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.SecondaryLanguageId, new SelectList(ViewBag.lngList, "Value", "Text"), "Select Secondary Language", new { @class = "form-control", id = "editSecondaryLanguageId", @onchange = "editvalidData()" })
                @Html.ValidationMessageFor(model => model.SecondaryLanguageId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-8 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="return editvalidData();" />
                <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
            </div>
        </div>
    </div>
}


<script type="text/jscript">

    function editvalidData() {

        var contryCode = $('#editCountryCode').val().trim();;
        var contryName = $('#editCountryName').val().trim();;
        var secLangID = $('#editSecondaryLanguageId').val();
        var langID = $('#editLanguageID').val();


        if (contryCode) {
            $('#editCountryCode').css('border-color', '');
        }
        else {
            $('#editCountryCode').css('border-color', 'red');
        }

        if (contryName) {
            $('#editCountryName').css('border-color', '');
        }
        else {
            $('#editCountryName').css('border-color', 'red');
        }

        if (secLangID) {
            $('#editSecondaryLanguageId').css('border-color', '');
        }
        else {
            $('#editSecondaryLanguageId').css('border-color', 'red');
        }

        if (langID) {
            $('#editLanguageID').css('border-color', '');
        }
        else {
            $('#editLanguageID').css('border-color', 'red');
        }



        if (contryCode && contryName && secLangID && langID) {
            return true;
        }
        else {
            return false;
        }

        return false;
    }
</script>