@model Admin.Models.clsProductMaster
@{

    HtmlHelper.ClientValidationEnabled = false;
}
@using (Html.BeginForm("updateProduct", "ProductMaster", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            <div class="col-md-12">
                @Html.HiddenFor(model => model.productId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", id = "editProductName", @onkeypress = "checkProduct()" })
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.LastModified, new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastModified, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastModified)
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-8 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="return editvalidData();" />
                <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">

  function checkProduct() {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    };

    $('#editProductName').focusout(function () {
        editvalidData();
    })

    function editvalidData() {

        var prodName = $('#editProductName').val().trim();;
        if (prodName) {
            $('#editProductName').css('border-color', '');
            return true;
        }
         else {
            $('#editProductName').css('border-color', 'red');
            return false;
        }
        return false;
    }
</script>
